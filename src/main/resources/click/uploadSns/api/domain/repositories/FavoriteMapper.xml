<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="click.uploadSns.api.domain.repositories.FavoriteMapper">

  <resultMap type="click.uploadSns.api.domain.models.Dtos.FavoriteDto" id="FavoriteMap">
    <id property="id" column="id" />
    <result property="insertTime" column="insert_time" />
    <result property="updateTime" column="update_time" />
    <association property="pushUser" javaType="click.uploadSns.api.domain.models.Dtos.UserDto" resultMap="pushUserResult" />
    <association property="article" javaType="click.uploadSns.api.domain.models.Dtos.ArticleDto" resultMap="articleResult" />
  </resultMap>

  <resultMap id="pushUserResult" type="click.uploadSns.api.domain.models.Dtos.UserDto">
    <id property="id" column="pushUserId" />
    <result property="name" column="pushUserName" />
    <result property="furigana" column="pushUserFurigana" />
    <result property="mail" column="pushUserMail" />
    <result property="telNo" column="pushUserTelNo" />
    <result property="password" column="pushUserPassword" />
    <result property="role" column="pushUserRole" />
    <result property="iconImagePath" column="pushUserIconImagePath" />
    <result property="cognitoId" column="pushUserCognitoId" />
  </resultMap>

  <resultMap id="articleResult" type="click.uploadSns.api.domain.models.Dtos.ArticleDto">
    <id property="id" column="articleId" />
    <result property="title" column="articleTitle" />
    <result property="body" column="apushUserNamerticleBody" />
    <association property="user" javaType="click.uploadSns.api.domain.models.Dtos.UserDto" resultMap="userResult" />
    <collection property="tags" ofType="click.uploadSns.api.domain.models.Dtos.TagDto" resultMap="tagResult" />
  </resultMap>

  <resultMap id="userResult" type="click.uploadSns.api.domain.models.Dtos.UserDto">
    <id property="id" column="userId" />
    <result property="name" column="userName" />
    <result property="furigana" column="userFurigana" />
    <result property="mail" column="userMail" />
    <result property="telNo" column="userTelNo" />
    <result property="password" column="userPassword" />
    <result property="role" column="userRole" />
    <result property="iconImagePath" column="userIconImagePath" />
    <result property="cognitoId" column="userCognitoId" />
  </resultMap>

  <resultMap id="tagResult" type="click.uploadSns.api.domain.models.Dtos.TagDto">
    <id property="id" column="tagId" />
    <result property="name" column="tagName" />
    <result property="insertTime" column="tagInsertTime" />
    <result property="updateTime" column="tagUpdateTime" />
  </resultMap>

  <select id="findAll" resultMap="FavoriteMap">
    SELECT
      f.id,
      to_char(f.insert_time, 'YYYY/MM/DD HH24:MI') as insert_Time,
      to_char(f.update_time, 'YYYY/MM/DD HH24:MI') as update_Time,
      p.id as pushUserId,
      p.name as pushUserName,
      p.furigana as pushUserFurigana,
      p.mail as pushUserMail,
      p.tel_no as pushUserTelNo,
      p.password as pushUserPassword,
      p.role as pushUserRole,
      p.icon_image_path as pushUserIconImagePath,
      p.comment as pushUserComment,
      p.cognito_id as pushUserCognitoId,
      a.id as articleId,
      a.title as articleTitle,
      a.body as articleBody,
      u.id as userId,
      u.name as userName,
      u.furigana as userFurigana,
      u.mail as userMail,
      u.tel_no as userTelNo,
      u.password as userPassword,
      u.role as userRole,
      u.icon_image_path as userIconImagePath,
      u.comment as userComment,
      u.cognito_id as userCognitoId,
      i.id as tagId,
      i.name as tagName,
      to_char(i.insert_time, 'YYYY/MM/DD HH24:MI') as tagInsertTime,
      to_char(i.update_time, 'YYYY/MM/DD HH24:MI') as tagUpdateTime
    FROM
      upload_sns.favorite f
    INNER JOIN
      upload_sns.user p
    ON
      p.id = f.push_user_id
    INNER JOIN (
      upload_sns.article a
        INNER JOIN 
          upload_sns.user u
        ON
          u.id = a.user_id
          LEFT JOIN (
            SELECT
                *
            FROM
                upload_sns.article_use_tag aut
            INNER JOIN
                upload_sns.tag t
            ON
                aut.tag_id  = t.id
          ) i
    ON
      i.article_id = a.id
    )
    ON
      a.id = f.article_id
  </select>

  <select id="findById" resultMap="FavoriteMap">
    SELECT
      f.id,
      to_char(f.insert_time, 'YYYY/MM/DD HH24:MI') as insert_Time,
      to_char(f.update_time, 'YYYY/MM/DD HH24:MI') as update_Time,
      p.id as pushUserId,
      p.name as pushUserName,
      p.furigana as pushUserFurigana,
      p.mail as pushUserMail,
      p.tel_no as pushUserTelNo,
      p.password as pushUserPassword,
      p.role as pushUserRole,
      p.icon_image_path as pushUserIconImagePath,
      p.comment as pushUserComment,
      p.cognito_id as pushUserCognitoId,
      a.id as articleId,
      a.title as articleTitle,
      a.body as articleBody,
      u.id as userId,
      u.name as userName,
      u.furigana as userFurigana,
      u.mail as userMail,
      u.tel_no as userTelNo,
      u.password as userPassword,
      u.role as userRole,
      u.icon_image_path as userIconImagePath,
      u.comment as userComment,
      u.cognito_id as userCognitoId,
      i.id as tagId,
      i.name as tagName,
      to_char(i.insert_time, 'YYYY/MM/DD HH24:MI') as tagInsertTime,
      to_char(i.update_time, 'YYYY/MM/DD HH24:MI') as tagUpdateTime
    FROM
      upload_sns.favorite f
    INNER JOIN
      upload_sns.user p
    ON
      p.id = f.push_user_id
    INNER JOIN (
      upload_sns.article a
        INNER JOIN 
          upload_sns.user u
        ON
          u.id = a.user_id
          LEFT JOIN (
            SELECT
                *
            FROM
                upload_sns.article_use_tag aut
            INNER JOIN
                upload_sns.tag t
            ON
                aut.tag_id  = t.id
          ) i
    ON
      i.article_id = a.id
    )
    ON
      a.id = f.article_id
    WHERE
      f.id = #{id}
  </select>

  <select id="findByPushUserId" resultMap="FavoriteMap">
    SELECT
      f.id,
      to_char(f.insert_time, 'YYYY/MM/DD HH24:MI') as insert_Time,
      to_char(f.update_time, 'YYYY/MM/DD HH24:MI') as update_Time,
      p.id as pushUserId,
      p.name as pushUserName,
      p.furigana as pushUserFurigana,
      p.mail as pushUserMail,
      p.tel_no as pushUserTelNo,
      p.password as pushUserPassword,
      p.role as pushUserRole,
      p.icon_image_path as pushUserIconImagePath,
      p.comment as pushUserComment,
      p.cognito_id as pushUserCognitoId,
      a.id as articleId,
      a.title as articleTitle,
      a.body as articleBody,
      u.id as userId,
      u.name as userName,
      u.furigana as userFurigana,
      u.mail as userMail,
      u.tel_no as userTelNo,
      u.password as userPassword,
      u.role as userRole,
      u.icon_image_path as userIconImagePath,
      u.comment as userComment,
      u.cognito_id as userCognitoId,
      i.name as tagName,
      to_char(i.insert_time, 'YYYY/MM/DD HH24:MI') as tagInsertTime,
      to_char(i.update_time, 'YYYY/MM/DD HH24:MI') as tagUpdateTime
    FROM
      upload_sns.favorite f
    INNER JOIN
      upload_sns.user p
    ON
      p.id = #{userId}
    INNER JOIN (
      upload_sns.article a
        INNER JOIN 
          upload_sns.user u
        ON
          u.id = a.user_id
          LEFT JOIN (
            SELECT
                *
            FROM
                upload_sns.article_use_tag aut
            INNER JOIN
                upload_sns.tag t
            ON
                aut.tag_id  = t.id
          ) i
    ON
      i.article_id = a.id
    )
    ON
      a.id = f.article_id
    WHERE
      f.push_user_id = #{userId}
    ORDER BY 
      f.insert_time
    DESC
  </select>

  <select id="findByIds" resultMap="FavoriteMap">
  SELECT
      f.id,
      to_char(f.insert_time, 'YYYY/MM/DD HH24:MI') as insert_Time,
      to_char(f.update_time, 'YYYY/MM/DD HH24:MI') as update_Time,
      p.id as pushUserId,
      p.name as pushUserName,
      p.furigana as pushUserFurigana,
      p.mail as pushUserMail,
      p.tel_no as pushUserTelNo,
      p.password as pushUserPassword,
      p.role as pushUserRole,
      p.icon_image_path as pushUserIconImagePath,
      p.comment as pushUserComment,
      p.cognito_id as pushUserCognitoId,
      a.id as articleId,
      a.title as articleTitle,
      a.body as articleBody,
      u.id as userId,
      u.name as userName,
      u.furigana as userFurigana,
      u.mail as userMail,
      u.tel_no as userTelNo,
      u.password as userPassword,
      u.role as userRole,
      u.icon_image_path as userIconImagePath,
      u.comment as userComment,
      u.cognito_id as userCognitoId,
      i.id as tagId,
      i.name as tagName,
      to_char(i.insert_time, 'YYYY/MM/DD HH24:MI') as tagInsertTime,
      to_char(i.update_time, 'YYYY/MM/DD HH24:MI') as tagUpdateTime
    FROM
      upload_sns.favorite f
    INNER JOIN
      upload_sns.user p
    ON
      p.id = f.push_user_id
    INNER JOIN (
      upload_sns.article a
        INNER JOIN 
          upload_sns.user u
        ON
          u.id = a.user_id
          LEFT JOIN (
            SELECT
                *
            FROM
                upload_sns.article_use_tag aut
            INNER JOIN
                upload_sns.tag t
            ON
                aut.tag_id  = t.id
          ) i
    ON
      i.article_id = a.id
    )
    ON
      a.id = f.article_id
    WHERE
      f.article_id = #{articleId}
    AND
      f.push_user_id = #{pushUserId}
  </select>

  <insert id="insert"  parameterType = "click.uploadSns.api.domain.models.Favorite" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO 
      upload_sns.favorite (
        push_user_id,
        article_id,
        insert_time
      )
    VALUES (
      #{pushUserId},
      #{articleId},
      now() + cast('9 hours' as INTERVAL)
    );
  </insert>

  <update id="update" parameterType = "click.uploadSns.api.domain.models.Favorite">
    UPDATE
      upload_sns.favorite
    SET
      push_user_id = #{pushUserId}, 
      article_id = #{articleId},
      update_time = now() + cast('9 hours' as INTERVAL)
    WHERE 
      id = #{id}
  </update>

  <delete id="delete">
    DELETE
    FROM
      upload_sns.favorite
    WHERE
      id = #{id}
  </delete>

</mapper>